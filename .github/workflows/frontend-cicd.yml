name: Frontend CI / CD

# master 브랜치에 push 되면 workflow 작동
on:
  push:
    branches:
      - "master"

# 수동으로 workflow 실행 실행시킬때
# on:
#   workflow_dispatch:
#     inputs:
#       logLevel:
#         description: 'Log level'
#         required: true
#         default: 'warning'

# workflow 내에서 사용할 변수 값 저장
env:
  AWS_REGION: ap-northeast-2                   
  ECR_REPOSITORY: "cicd-front"           
  
# permissions:
#   contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest # 어떤 os 에서 실행시킬지
    environment: production

    steps:
    # Github에 저장된 코드를 CI 서버로 내려받아 뒷 step에서 사용할 수 있도록 하는 과정
    - name: Checkout
      uses: actions/checkout@v3 

    # Github Secret과 local env 에 저장된 값 불러오기
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    # access key와 secret를 사용하여 ECR에 push할 수 있도록 인증
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    # Github action console에서는 아래와 같이 ***로 암호화돼서 보이게된다. 잘못들어간 값이 아님.  
    # AWS_ACCESS_KEY_ID: ***
    # AWS_SECRET_ACCESS_KEY: ***
    # ***.dkr.ecr.ap-northeast-2.amazonaws.com 의 ***도 마찬가지

    # Dockerfile 을 기준으로 이미지 빌드 후 ecr로 push
    - name: Docker Build and ECR Push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        platforms: linux/amd64
        push: true
        tags: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}
      # 내부적 로직은 아래와 같음
      # docker build -t cicd-front .
      # docker tag cicd-front:latest 123412341234.dkr.ecr.ap-northeast-2.amazonaws.com/cicd-front:latest
      # docker push 123412341234.dkr.ecr.ap-northeast-2.amazonaws.com/cicd-front:latest

    # # kustomize 명령을 가져온다.
    # - name: Setup Kustomize
    #   uses: imranismail/setup-kustomize@v1
    - name: Run Kubernetes tools
      uses: stefanprodan/kube-tools@v1
      with:
          kustomize: 4.4.1

    - name: Checkout kustomize repository
      uses: actions/checkout@v2
      with:
        # kubernetes 설정정보 저장소
        repository: viaSSH/cicd-gitops-eks
        ref: frontend
        # 다른 저장소에 push 하려면 Personal Access Token이 필요.
        token: ${{ secrets.ACTION_TOKEN }}
        path: cicd-gitops-eks
        # kustomize: 4.4.1

    # 새 이미지 버전으로 파일 수정
    - name: Update Kubernetes resources
      run: |
        pwd
        cd cicd-gitops-eks/overlays/prd/
        echo \${{ steps.login-ecr.outputs.registry }}/\${{ env.ECR_REPOSITORY }}
        echo \${{ steps.login-ecr.outputs.registry }}/\${{ env.ECR_REPOSITORY }}:\${{ github.sha }}
        kustomize edit set image \${{ steps.login-ecr.outputs.registry }}/\${{ env.ECR_REPOSITORY }}=\${{ steps.login-ecr.outputs.registry }}/\${{ env.ECR_REPOSITORY }}:\${{ github.sha }}
        cat kustomization.yaml

    # 수정된 파일 commit & push
    - name: Commit minifest files
      run: |
        cd cicd-gitops-eks
        git config --global user.email "hanseung0609@github.com"
        git config --global user.name "viassh"
        git commit -am "Update image tag"
        git push -u origin frontend

